"use strict";(self.webpackChunkrust_wasmpack_loader=self.webpackChunkrust_wasmpack_loader||[]).push([[1012],{5403:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"docs/getting-started/quick-start","title":"Quick Start","description":"Get up and running with rust-wasmpack-loader in just a few minutes! This guide will walk you through creating your first Rust-WebAssembly project with Webpack in web target and rust-wasmpack-loader.","source":"@site/docs/docs/getting-started/quick-start.mdx","sourceDirName":"docs/getting-started","slug":"/docs/getting-started/quick-start","permalink":"/rustwasm-loader/docs/getting-started/quick-start","draft":false,"unlisted":false,"editUrl":"https://github.com/yeskiy/rustwasm-loader/tree/main/docs/docs/getting-started/quick-start.mdx","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Installation","permalink":"/rustwasm-loader/docs/getting-started/installation"},"next":{"title":"Examples Overview","permalink":"/rustwasm-loader/docs/examples/"}}');var r=t(4848),i=t(8453);const a={},l="Quick Start",c={},o=[{value:"Step 1: Create a New Project",id:"step-1-create-a-new-project",level:2},{value:"Step 2: Install Dependencies",id:"step-2-install-dependencies",level:2},{value:"Step 3: Create Cargo.toml",id:"step-3-create-cargotoml",level:2},{value:"Step 4: Write Your First Rust Function",id:"step-4-write-your-first-rust-function",level:2},{value:"Step 5: Configure Webpack",id:"step-5-configure-webpack",level:2},{value:"Step 6: Create JavaScript Entry Point",id:"step-6-create-javascript-entry-point",level:2},{value:"Step 7: Create HTML File",id:"step-7-create-html-file",level:2},{value:"Step 8: Add Build Scripts",id:"step-8-add-build-scripts",level:2},{value:"Step 9: Build and Run",id:"step-9-build-and-run",level:2},{value:"What Just Happened?",id:"what-just-happened",level:2},{value:"Next Steps",id:"next-steps",level:2},{value:"Advanced Configuration",id:"advanced-configuration",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"quick-start",children:"Quick Start"})}),"\n",(0,r.jsxs)(n.p,{children:["Get up and running with rust-wasmpack-loader in just a few minutes! This guide will walk you through creating your first Rust-WebAssembly project with ",(0,r.jsx)(n.strong,{children:"Webpack"})," in ",(0,r.jsx)(n.code,{children:"web"})," target and ",(0,r.jsx)(n.strong,{children:"rust-wasmpack-loader"}),"."]}),"\n",(0,r.jsx)(n.admonition,{type:"tip",children:(0,r.jsxs)(n.p,{children:["For other examples, check out our ",(0,r.jsx)(n.a,{href:"../examples",children:"Examples Section"}),"."]})}),"\n",(0,r.jsx)(n.h2,{id:"step-1-create-a-new-project",children:"Step 1: Create a New Project"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"mkdir my-rust-wasm-app\ncd my-rust-wasm-app\nnpm init -y\n"})}),"\n",(0,r.jsx)(n.h2,{id:"step-2-install-dependencies",children:"Step 2: Install Dependencies"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Install rust-wasmpack-loader\nnpm install --save-dev rust-wasmpack-loader webpack webpack-cli webpack-dev-server\n\n# For TypeScript support (optional)\nnpm install --save-dev typescript ts-loader @types/node\n"})}),"\n",(0,r.jsx)(n.h2,{id:"step-3-create-cargotoml",children:"Step 3: Create Cargo.toml"}),"\n",(0,r.jsxs)(n.p,{children:["Create a ",(0,r.jsx)(n.code,{children:"Cargo.toml"})," file in your project root:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",metastring:'title="Cargo.toml"',children:'[package]\nname = "my-rust-wasm-app"\nversion = "0.1.0"\nedition = "2021"\n\n[lib]\ncrate-type = ["cdylib"]\n\n[dependencies]\nwasm-bindgen = "0.2.95"\n\n[dependencies.web-sys]\nversion = "0.3"\nfeatures = [\n  "console",\n]\n'})}),"\n",(0,r.jsx)(n.h2,{id:"step-4-write-your-first-rust-function",children:"Step 4: Write Your First Rust Function"}),"\n",(0,r.jsxs)(n.p,{children:["Create a ",(0,r.jsx)(n.code,{children:"src/lib.rs"})," file:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-rust",metastring:'title="src/lib.rs"',children:'use wasm_bindgen::prelude::*;\n\n// Import the `console.log` function from the browser\n#[wasm_bindgen]\nextern "C" {\n    #[wasm_bindgen(js_namespace = console)]\n    fn log(s: &str);\n}\n\n// Define a macro to make console.log easier to use\nmacro_rules! console_log {\n    ($($t:tt)*) => (log(&format_args!($($t)*).to_string()))\n}\n\n// Export a `greet` function from Rust to JavaScript\n#[wasm_bindgen]\npub fn greet(name: &str) {\n    console_log!("Hello, {}!", name);\n}\n\n// Export a function that calculates fibonacci numbers\n#[wasm_bindgen]\npub fn fibonacci(n: u32) -> u32 {\n    match n {\n        0 => 0,\n        1 => 1,\n        _ => fibonacci(n - 1) + fibonacci(n - 2),\n    }\n}\n\n// Export a function that adds two numbers\n#[wasm_bindgen]\npub fn add(a: i32, b: i32) -> i32 {\n    a + b\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"step-5-configure-webpack",children:"Step 5: Configure Webpack"}),"\n",(0,r.jsxs)(n.p,{children:["Create a ",(0,r.jsx)(n.code,{children:"webpack.config.js"})," file:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",metastring:'title="webpack.config.js"',children:'const path = require("path");\n\nmodule.exports = {\n  entry: "./src/index.js",\n  output: {\n    path: path.resolve(__dirname, "dist"),\n    filename: "bundle.js"\n  },\n  module: {\n    rules: [\n      {\n        test: /\\.rs$/,\n        exclude: /node_modules/,\n        use: [\n          {\n            loader: "rust-wasmpack-loader",\n            options: {\n              logLevel: "info"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  mode: "development",\n  devServer: {\n    static: {\n      directory: path.join(__dirname, "dist")\n    },\n    compress: true,\n    port: 9000\n  }\n};\n'})}),"\n",(0,r.jsx)(n.h2,{id:"step-6-create-javascript-entry-point",children:"Step 6: Create JavaScript Entry Point"}),"\n",(0,r.jsxs)(n.p,{children:["Create a ",(0,r.jsx)(n.code,{children:"src/index.js"})," file:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",metastring:'title="src/index.js"',children:"// Import the Rust module\nimport wasmModule from './lib.rs';\n\n// Call the greet function\nwasmModule.greet('WebAssembly');\n\n// Calculate fibonacci number\nconst fibResult = wasmModule.fibonacci(10);\nconsole.log(`Fibonacci(10) = ${fibResult}`);\n\n// Add two numbers\nconst sum = wasmModule.add(5, 3);\nconsole.log(`5 + 3 = ${sum}`);\n\n// Update the page\ndocument.body.innerHTML = `\n    <h1>Rust + WebAssembly + Webpack</h1>\n    <p>Fibonacci(10) = ${fibResult}</p>\n    <p>5 + 3 = ${sum}</p>\n    <p>Check the console for the greeting!</p>\n`;\n"})}),"\n",(0,r.jsx)(n.h2,{id:"step-7-create-html-file",children:"Step 7: Create HTML File"}),"\n",(0,r.jsxs)(n.p,{children:["Create a ",(0,r.jsx)(n.code,{children:"dist/index.html"})," file:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-html",metastring:'title="dist/index.html"',children:'<!DOCTYPE html>\n<html>\n<head>\n    <meta charset="utf-8">\n    <title>Rust WebAssembly App</title>\n</head>\n<body>\n    <div id="app">Loading...</div>\n    <script src="bundle.js"><\/script>\n</body>\n</html>\n'})}),"\n",(0,r.jsx)(n.h2,{id:"step-8-add-build-scripts",children:"Step 8: Add Build Scripts"}),"\n",(0,r.jsxs)(n.p,{children:["Update your ",(0,r.jsx)(n.code,{children:"package.json"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",metastring:'title="package.json"',children:'{\n  ...\n  "scripts": {\n    "build": "webpack",\n    "start": "webpack serve",\n    "dev": "webpack serve --mode development"\n  },\n  ...\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"step-9-build-and-run",children:"Step 9: Build and Run"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Build the project\nnpm run build\n\n# Start the development server\nnpm start\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Open your browser and navigate to ",(0,r.jsx)(n.code,{children:"http://localhost:9000"}),". You should see:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Fibonacci(10) = 55"}),"\n",(0,r.jsx)(n.li,{children:"5 + 3 = 8"}),"\n",(0,r.jsx)(n.li,{children:"A greeting message in the console"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"what-just-happened",children:"What Just Happened?"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Rust Code"}),": You wrote Rust functions and exported them with ",(0,r.jsx)(n.code,{children:"#[wasm_bindgen]"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Compilation"}),": rust-wasmpack-loader automatically compiled your Rust code to WebAssembly"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Integration"}),": The loader generated JavaScript bindings for your Rust functions"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Import"}),": You imported the ",(0,r.jsx)(n.code,{children:".rs"})," file directly in JavaScript"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Execution"}),": Your Rust functions ran in the browser!"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,r.jsx)(n.h3,{id:"advanced-configuration",children:"Advanced Configuration"}),"\n",(0,r.jsx)(n.p,{children:"Customize the loader behavior:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",metastring:'title="webpack.config.js"',children:'// In your webpack.config.js rules array\nconst rule = {\n  test: /\\.rs$/,\n  exclude: /node_modules/,\n  use: [\n    {\n      loader: "rust-wasmpack-loader",\n      options: {\n        web: {\n          asyncLoading: true,\n          publicPath: true\n        },\n        logLevel: "verbose"\n      }\n    }\n  ]\n};\n'})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.admonition,{title:"Congratulations! \ud83c\udf89",type:"tip",children:(0,r.jsx)(n.p,{children:"You've successfully created your first Rust-WebAssembly application! The combination of Rust's performance and JavaScript's flexibility opens up endless possibilities."})})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);